YouTube Party Jam
=================

This is a demo project that makes use of YouTube and Google+ APIs to allow
users to collaboratively edit a YouTube playlist.

Global TODOs
------------

Fix pdb_set_trace:
  Don't force the user to reload the server.
Improve the OAuth flow when embedded in a hangout:
  Can we automatically close the OAuth window after the user provides access?
Switch to share widget:
  Keep a list of everyone who have ever edited the page:
    Store it in the datastore.
  Show all playlists on playlist list page.
Validate host_url wherever it's used.
Going back to the page doesn't seem to work.
How do we get the developer key out of the source?
memcacheutils.lookup_channel leads to a KeyError sometimes.

Limitations
-----------

We specifically decided not to write any tests because this is a prototype.
However, all the code was either pair programmed or code reviewed.

Party Jam does not work with all YouTube playlists.  It only works with
playlists that have been created within Party Jam.

Only 25 search results are shown.  There is no paging.

The ajax is pretty "blunt" right now.  Entire playlists are transported
from the server every time the user makes a change.

If you delete a playlist, it still appears to be active and can be modified
using Party Jam. This is due to odd behavior on the part of the YouTube API.

Memcache updates are done without locking. There is a potential race condition
as a result, in which the server could lose track of a channel id.

If Channel API communication fails (due to timeout or any other reason), we do
not automatically attempt to reconnect. A notification is displayed asking the
user to reload the page.

"Start a hangout" only works if the application is running on the public
Internet.